Script started on 2025-01-27 01:33:05+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="151" LINES="16"]
[0;32m@Bhumika7 [0mâžœ [1;34m/workspaces/csci-330-homeworks-Bhumika7 [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 2.0.1.debian, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (defparameter *list1* '(a b x d))         ; Flat list
*LIST1*
* (defparameter *list2* '(a (b (x d))))     ; Nested list
*LIST2*
* (defparameter *list3* '(((a (b (x) d))))) ; Deeply nested list
*LIST3*
* (print (caddr *list1*))  ; Get 3rd element from flat list *list1*

X 
X
* (print (car (car (cdr (car (cdr *list2*))))))  ; Get 'x' from *list2*

X 
X
* (print (car (car (cdr (car (cdr (car (car *list3*))))))))  ; Get 'x' from *list3*

X 
X
* (defparameter *list1-cons* (cons 'a (cons 'b (cons 'x (cons 'd nil)))))
*LIST1-CONS*
* (print *list1-cons*)  ; should print (a b x d)

(A B X D) 
(A B X D)
* (defparameter *list2-cons* (cons 'a (cons (cons 'b (cons (cons 'x (cons 'd nil)) nil)) nil)))
*LIST2-CONS*
* (print *list2-cons*)  ; should print (a (b (x d)))

(A (B (X D))) 
(A (B (X D)))
* (defparameter *list3-cons* (cons (cons (cons 'a (cons (cons 'b (cons (cons 'x nil) (cons 'd nil))) nil)) nil) nil))
*LIST3-CONS*
* (print *list3-cons*)  ; should print ((( a (b (x) d))))

(((A (B (X) D)))) 
(((A (B (X) D))))
* (exit)
[0;32m@Bhumika7 [0mâžœ [1;34m/workspaces/csci-330-homeworks-Bhumika7 [0;36m([1;31mmain[0;36m) [0m$ exit

Script done on 2025-01-27 01:34:29+00:00 [COMMAND_EXIT_CODE="0"]
